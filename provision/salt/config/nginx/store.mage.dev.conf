# http://wiki.nginx.org/Magento look to this
################################################################
# wp.wsu.edu local nginx configuration
server {
    listen       80;
    server_name  *.mage.dev;
    root         /var/www/store.wsu.edu/html/;

    #hotlinking and hacking low level fruit.  Kill them off
    location / {
        if ($query_string ~ "http\:"){ return 403; break; }
        if ($query_string ~ "\["){ return 403; break; }
        if ($query_string ~ "\]"){ return 403; break; }
        
        # Block out any script that includes a <script> tag in URL
        if ($query_string ~* "(\<|%3C).*script.*(\>|%3E)"){ return 403; break; }
        
        # Block out any script trying to modify a _REQUEST variable via URL
        if ($query_string ~ "_REQUEST(=|\[|\%[0-9A-Z]{0,2})"){ return 403; break; }
        
        # Block out any script trying to set a PHP GLOBALS variable via URL
        if ($query_string ~ "GLOBALS(=|\[|\%[0-9A-Z]{0,2})"){ return 403; break; }
        
        #if there was an attempt to send a sql query unsafely to the server
        if ($query_string ~* ".*((%73|%53|s)(%65|%45|e)(%6C|%4C|l)(%65|%45|e)(%63|%43|c)(%74|%54|t)|(%69|%49|i)(%6E|%4E|n)(%73|%53|s)(%65|%45|e)(%72|%52|r)(%74|%54|t)|(%44|%64|d)(%65|%45|e)(%6C|%4C|l)(%65|%45|e)(%74|%54|t)(%65|%45|e)|(%44|%64|d)(%72|%52|r)(%4F|%6F|o)(%70|%50|p)|(%55|%75|u)(%70|%50|p)(%44|%64|d)(%41|%61|a)(%74|%54|t)(%65|%45|e)|(%41|%61|a)(%6C|%4C|l)(%74|%54|t)(%65|%45|e)(%72|%52|r)|(%41|%61|a)(%44|%64|d)(%44|%64|d)|(%4A|%6A|j)(%4F|%6F|o)(%69|%49|i)(%6E|%4E|n)|(%63|%43|c)(%72|%52|r)(%65|%45|e)(%41|%61|a)(%74|%54|t)(%65|%45|e)).*((%74|%54|t)(%41|%61|a)(%42|%62|b)(%6C|%4C|l)(%65|%45|e)|(%46|%66|f)(%72|%52|r)(%4F|%6F|o)(%4D|%6D|m)|(%69|%49|i)(%6E|%4E|n)(%74|%54|t)(%4F|%6F|o)|(%73|%53|s)(%65|%45|e)(%74|%54|t)|(%63|%43|c)(%4F|%6F|o)(%6C|%4C|l)(%55|%75|u)(%4D|%6D|m)(%6E|%4E|n)|(%69|%49|i)(%6E|%4E|n)(%44|%64|d)(%58|%78|e)(%72|%52|x)|(%56|%76|v)(%69|%49|i)(%58|%78|e)(%57|%77|w)|(%55|%75|u)(%6E|%4E|n)(%69|%49|i)(%4F|%6F|o)(%6E|%4E|n)|(%44|%64|d)(%41|%61|a)(%74|%54|t)(%41|%61|a)(%42|%62|b)(%41|%61|a)(%73|%53|s)(%65|%45|e)).*((%57|%77|w)(%48|%68|h)(%65|%45|e)(%72|%52|r)(%65|%45|e)|(%4F|%6F|o)(%6E|%4E|n)|(%41|%61|a)(%6C|%4C|l)(%6C|%4C|l)|(.*)).*"){ return 403; break; } 

        ## ALTERNATIVE ANTI-HOTLINKING
        if ($http_referer !~ "^$"){ return 403;  }
        
        ## REDIRECT HOTLINKERS
        if ($http_referer !~ "^$"){ rewrite ^/.*\.(bmp|tif|gif|jpg|jpeg|jpe|png)$ http://google.com redirect; } 
        
        #NOTE: ngx_http_addition_module is loaded for global notices
        #look to http://nginx.org/en/docs/http/ngx_http_addition_module.html
        #add_before_body /before_action;
        #add_after_body  /after_action;
        #::same as
        #ngx_http_sub_module which is also loaded
        #sub_filter      </head>
        #    '</head><script language="javascript" src="$script"></script>';
        #sub_filter_once on;

        index index.php;
        try_files $uri $uri/ /index.php$is_args$args;
    }


    # set a nice expire for assets
    location ~* "^.+\.(jpe?g|gif|css|png|js|ico|pdf|zip|tar|t?gz|mp3|wav|swf)$" {
        expires    max;
        add_header Cache-Control public;
        log_not_found off;
    }
  
    # this prevents hidden files (beginning with a period) from being served
    location ~ /\. {
        access_log off;
        log_not_found off;
        deny all;
    }

    # Via https://github.com/h5bp/server-configs-nginx/
    #
    # Prevent a variety of file extensions associated with backups and configs
    # from being served.
    location ~* (?:\.(?:bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)|~)$ {
        access_log off;
        log_not_found off;
        deny all;
    }

    location ~ ^/(app|includes|lib|media/downloadable|pkginfo|report/config.xml|var)/ { internal; }

    location ~ \.php$ {
        client_max_body_size 50M;
    
        try_files      $uri =404;
    
        include        /etc/nginx/fastcgi_params;
    
        fastcgi_read_timeout 3600s;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 8 128k;
        fastcgi_param   SCRIPT_FILENAME         $document_root$fastcgi_script_name;
    
        fastcgi_param MAGE_RUN_TYPE  website;
        #fastcgi_param MAGE_RUN_CODE $magesite;
    
        # Use the upstream for php5-fpm that we defined in nginx.conf
        fastcgi_pass   php;
    
        # And get to serving the file!
        fastcgi_index  index.php;
    }

}

